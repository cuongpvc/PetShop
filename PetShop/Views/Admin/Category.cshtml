@model List<Category>

<h1 class="h3 mb-2 text-gray-800">Categories Management</h1>
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary d-flex justify-content-between align-items-center">
            <span>List of Category</span>
            <span>
                <button class="btn btn-primary btn-action" data-action="create">Create</button>
            </span>
        </h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered text-center" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Picture</th>
                        <th>CategoryName </th>
                        <th>Description</th>
                        <th width="150px">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in Model)
                    {
                        <tr>
                            <td>
                                <img src="@category.Picture" alt="@category.CategoryName" width="100" height="100" />
                            </td>
                            <td>@category.CategoryName</td>
                            <td title="@category.Description">@category.Description</td>
                            <td>
                                <button class="btn btn-primary btn-action" data-id="@category.CategoryId" data-action="edit">Edit</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal add/edit product -->
<div class="modal fade" id="modalCategory" tabindex="-1" role="dialog" aria-labelledby="modalCategory" aria-hidden="true">
    <div class="modal-dialog" role="document" style="max-width: 60%;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalCategory">Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="formCategory" method="post">
                    <input type="hidden" id="CategoryId" name="CategoryId" />
                    <div class="form-group">
                        <label for="CategoryName">Category Name</label>
                        <input type="text" class="form-control" id="CategoryName" name="CategoryName" />
                    </div>
                    <div class="form-group">
                        <label for="Description">Description</label>
                        <textarea class="form-control" id="Description" name="Description"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="Picture">Picture</label>
                        <input type="text" class="form-control" id="Picture" name="Picture" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary btn-action" data-action="save">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Xử lý datatable
            $("#dataTable").DataTable({
                columnDefs: [
                    {
                        targets: [2],
                        render: $.fn.dataTable.render.ellipsis(100),
                    },
                ],
                scrollCollapse: true,
                scrollY: '500px',
            });

            // Xử lý modal
            $(document).on("click", ".btn-action", async function () {
                var action = $(this).data("action");
                var id = $(this).data("id");
                if (action === "edit") {
                    resetForm();
                    var url = `/admin/api/category/${id}`;
                    var response = await fetch(url);
                    var data = await response.json();
                    handleBindingData(data);
                    showModal();
                } else if (action === "create") {
                    resetForm();
                    showModal();
                } else if (action === "save") {
                    $("#formCategory").submit();
                } else if (action === "delete") {
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You won't be able to revert this!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, delete it!",
                    }).then(async function (result) {
                        if (result.isConfirmed) {
                            var url = `/admin/api/category/${id}`;
                            $.ajax({
                                url: url,
                                method: "DELETE",
                                success: function (res) {
                                    Swal.fire({
                                        icon: "success",
                                        title: "Success",
                                        text: "Delete category successfully",
                                    }).then(function () {
                                        location.reload();
                                    });
                                },
                                error: function (res) {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Oops...",
                                        text: res.responseText || "Something went wrong!",
                                    });
                                },
                            });
                        }
                    });
                }
            });

            function resetForm() {
                $("#formCategory")[0].reset();
                $("#formCategory").validate().resetForm();
            }

            $("#formCategory").validate({
                rules: {
                    CategoryName: {
                        required: true,
                        minlength: 3,
                    },
                    Description: {
                        required: true,
                        minlength: 3,
                    },
                    Picture: {
                        required: true,
                        url: true,
                    },
                },
                messages: {
                    CategoryName: {
                        required: "Please enter category name",
                        minlength: "Category name must be at least 3 characters",
                    },
                    Description: {
                        required: "Please enter description",
                        minlength: "Description must be at least 3 characters",
                    },
                    Picture: {
                        required: "Please enter picture",
                        url: "Please enter a valid URL",
                    },
                },
                submitHandler: function (form) {
                    var data = $(form).serialize();
                    var url = "/admin/api/category";
                    var method = "POST";
                    var categoryId = $("#CategoryId").val();
                    if (categoryId) {
                        url = `/admin/api/category/${categoryId}`;
                        method = "PUT";
                    }
                    $.ajax({
                        url: url,
                        method: method,
                        data: data,
                        contentType: "application/x-www-form-urlencoded",
                        success: function (res) {
                            Swal.fire({
                                icon: "success",
                                title: "Success",
                                text: categoryId ? "Update category successfully" : "Create category successfully",
                            }).then(function () { 
                                location.reload();
                            });
                        },
                        error: function (res) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: res.responseText || "Something went wrong!",
                            });
                        },
                    });
                },
            });

            function showModal() {
                $("#modalCategory").modal("show");
            }

            function closeModal() {
                $("#modalCategory").modal("hide");
                resetForm();
            }

            function handleBindingData(data) {
                Object.keys(data).forEach(function (key) {
                    let value = data[key];
                    if (typeof value === "string") {
                        value = value.trim();
                    }
                    $(`#${key}`).val(value);
                });
            }
        });
    </script>
}